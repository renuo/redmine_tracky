.box
  .timer-container
    ruby:
      active_timer_session = timer_session || TimerSession.new
    = labelled_form_for(active_timer_session,
      url: active_timer_session.persisted? ? stop_time_tracker_path : start_time_tracker_path,
      method: :post,
      remote: true,
      format: :js) do |f|
      = f.hidden_field :id, data: { timer_id: '' }
      = error_messages_for active_timer_session
      .row
        .issue-container
          .box
            = f.text_field :issue_id, label: false
            div[data-issue-selection-container]
              - active_timer_session.issues.each do |issue|
                .issue-container
                  label[for="timer_session_issue_id_#{issue.id}"]
                    = issue.subject
                  input[id="timer_session_issue_id_#{issue.id}" readonly
                    name='timer_session[issue_ids][]'
                    value=issue.id]
                  .input-group-text[data-issue-deletion-action]
                    i.icon-only.icon-del
      br
      br
      .row
        = f.text_field :comments, data: { timer_comment_input: '' }
      br
      .times-container
        .col
          = f.datetime_field :timer_start, class: 'datetime-picker', data: { timer_start_input: '' },
            value: active_timer_session.timer_start&.strftime(t('timer_sessions.formats.datetime_format'))
        br
        .col
          = f.datetime_field :timer_end, class: 'datetime-picker', data: { timer_end_input: '' },
            value: active_timer_session.timer_end&.strftime(t('timer_sessions.formats.datetime_format'))
      br
      div[data-hours-timer]
        #hours-clock
      br
      - if timer_session
        div[data-ending-action-buttons]
          = f.button :stop, type: :submit, name: :stop do
            =<> t('timer_sessions.timer.stop')
            i.icon.icon-error
          = f.button :cancel, type: :submit, name: :cancel do
            =<> t('timer_sessions.timer.cancel')
            i.icon.icon-cancel
      - else
        = f.button :start, type: :submit, name: :start do
          =<> t('timer_sessions.timer.start')
          i.icon.icon-add.new-issue
