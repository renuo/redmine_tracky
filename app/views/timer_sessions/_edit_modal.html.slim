= error_messages_for timer_session
.edit-modal
  = labelled_form_for(timer_session, remote: true) do |f|
    .row
      .update-issue-container
        .box
          = f.text_field :issue_id, label: false, id: 'timer_session_update_issue_id'
          - if SettingsManager.visible_hints
            small.form-text.text-muted = t('timer_sessions.messaging.issue_list_hint')
          hr
          = render 'shared/ticker_issue_list.html.slim', timer_session: timer_session,
            data_anker: 'data-update-issue-deletion-action', container_data_anker: 'data-update-issue-selection-container'
    hr.mb-3
    = f.text_field :comments, data: { timer_comment_input: '' },
      placeholder: t('timer_sessions.messaging.comments_placeholder')
    br
    .times-container
      .col
        = f.text_field :timer_start, class: 'datetime-picker', data: { timer_start_input: '' },
          placeholder: t('timer_sessions.timer.date_placeholder'),
          value: timer_session.timer_start&.strftime(t('timer_sessions.formats.datetime_format'))
        - if SettingsManager.visible_hints
          small.form-text.text-muted = t('timer_sessions.messaging.timer_start_hint')
      br
      .col
        = f.text_field :timer_end, class: 'datetime-picker', data: { timer_end_input: '' },
          placeholder: t('timer_sessions.timer.date_placeholder'),
          value: timer_session.timer_end&.strftime(t('timer_sessions.formats.datetime_format'))
        - if SettingsManager.visible_hints
          small.form-text.text-muted = t('timer_sessions.messaging.timer_end_hint')
    .mb-3

    .buttons
      = link_to_function l(:button_cancel), 'hideModal(this);', class: 'btn btn-primary'
      = f.submit t('timer_sessions.edit.update'), data: { modal_update_button: '' }
